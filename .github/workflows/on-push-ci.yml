name: CI/CD On Push Workflow

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: read-all
    env:
      ACTIONS_STEP_DEBUG: true

    steps:
      - uses: actions/checkout@v3
      - name: Checkout Code
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}
          source-url: ${{ vars.NUGET_SOURCE_URL }}

      - name: Debug Root Directory
        run: ls -la

      - name: Dotnet restore solution
        run: dotnet restore AssessGrader.sln

      - name: Dotnet build solution
        run: dotnet build AssessGrader.sln

  test:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      test-results: ${{ steps.test.outputs.test-results }}
    steps:
      - uses: actions/checkout@v3
      - name: Checkout Code
        uses: actions/setup-dotnet@v3
        with:
           dotnet-version: ${{ vars.DOTNET_VERSION }}
           source-url: ${{ vars.NUGET_SOURCE_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}

      - name: Test
        run: dotnet test ${{ vars.SOLUTION_PATH }} --logger "trx;LogFileName=test-results.trx" || true  *With this CI continue to run whether tests fail or not
        # run: dotnet test ${{ vars.SOLUTION_PATH }} --logger "trx;LogFileName=test-results.trx"

      - name: Check Test Results File
        id: check_results
        run: |
          if [ -f TestResults/test-results.trx ]; then
            echo "::set-output name=test-results-exist::true"
          else
            echo "::set-output name=test-results-exist::false"
          fi

      - name: Get Test Results
        id: get_results
        if: steps.check_results.outputs.test-results-exist == 'true'
        run: |
          test_results=$(grep -oP 'Total Points: \d+\nPassed : \d+\nFail :  \d+' TestResults/test-results.trx)
          echo "::set-output name=test-results::$test_results"
          echo "::set-output name=test-results::$test_results"


      # - name: Test Report
      #   uses: dorny/test-reporter@v1
      #   if: always()
      #   with:
      #     name: DotNET Tests
      #     path: "**/test-results.trx"
      #     reporter: dotnet-trx
      #     fail-on-error: 'false'
      #     only-summary: 'false'


