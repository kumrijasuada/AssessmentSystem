name: CI/CD On Push Workflow

on:
  push:
    branches: [ "main" ]
  # pull_request:
  #   branches: [ "main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: write
    env:
      ACTIONS_STEP_DEBUG: true

    steps:
      - uses: actions/checkout@v3
      - name: Checkout Code
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ vars.DOTNET_VERSION }}
          source-url: ${{ vars.NUGET_SOURCE_URL }}

      - name: Dotnet restore solution
        run: dotnet restore AssessGrader.sln

      - name: Dotnet build solution
        run: dotnet build AssessGrader.sln

  test:
    needs: build
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      test-results: ${{ steps.test.outputs.test-results }}
    steps:
      - uses: actions/checkout@v3
      - name: Checkout Code
        uses: actions/setup-dotnet@v3
        with:
           dotnet-version: ${{ vars.DOTNET_VERSION }}
           source-url: ${{ vars.NUGET_SOURCE_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}
          GITHUB_TOKEN: ${{ github.token }}

      - name: Test
        run: dotnet test ${{ vars.SOLUTION_PATH }} --logger "trx;LogFileName=test-results.trx" || true  *With this CI continue to run whether tests fail or not

      - name: Get Element
        run: |
            xml_file="/home/runner/work/AssessmentSystem/AssessmentSystem/Assesment.Tests/TestResults/test-results.trx"
            grep -o '<StdOut>.*</StdOut>' "$xml_file" | sed 's/<StdOut>\(.*\)<\/StdOut>/\1/' > result.txt
            echo "SPECIFIC_ELEMENT=result.txt" >> $GITHUB_ENV

      - name: Print XML content
        run: |
          echo "${{ steps.get-result.outputs.SPECIFIC_ELEMENT }}"